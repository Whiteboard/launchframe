
# Travis CI configuration file.
# @link https://travis-ci.org/

# For use with the Twenty Sixteen WordPress theme
# @link https://github.com/WordPress/twentysixteen/

# Declare project language and PHP versions to test against.
# @link http://about.travis-ci.org/docs/user/languages/php/

language: php

# Declare versions of PHP to use. Use one decimal max.
php:
    - '7.1'
    - "7.0"
    - "5.6"
    - "5.5"
    - "5.4"
    - "5.3"
    - "5.2"
    - nightly

# Declare which versions of WordPress to test against.
# Also declare whether or not to test in Multisite.
env:
    # Trunk (current version in development is 4.4)
    # @link https://github.com/WordPress/WordPress
    - WP_VERSION=master WP_MULTISITE=0

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
install:
    - yarn
    - gulp watch

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
    # Search theme for PHP syntax errors.
    - find . \( -name '*.php' \) -exec php -lf {} \;
    # WordPress Coding Standards
    # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
    # @link http://pear.php.net/package/PHP_CodeSniffer/
    # -p flag: Show progress of the run.
    # -s flag: Show sniff codes in all reports.
    # -v flag: Print verbose output.
    # -n flag: Do not print warnings (shortcut for --warning-severity=0)
    # --standard: Use WordPress as the standard.
    # --extensions: Only sniff PHP files.
    - $WP_DEVELOP_DIR/php-codesniffer/scripts/phpcs -p -s -v -n . --standard=./codesniffer.ruleset.xml --extensions=php
